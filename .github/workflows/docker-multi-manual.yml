name: Build multi images (manual)

on:
  workflow_dispatch:
    inputs:
      push:
        description: "Push to GHCR"
        required: false
        default: "false"
        type: choice
        options: ["false", "true"]
      platforms:
        description: "Target platforms"
        required: false
        default: "linux/amd64,linux/arm64"
        type: string

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  REPO: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR (if push)
        if: inputs.push == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Meta client
        id: meta_client
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO }}-client
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=ref,event=branch
            type=ref,event=tag
            type=sha

      - name: Build client
        uses: docker/build-push-action@v6
        with:
          context: .
          file: deploy/Dockerfile.client
          platforms: ${{ inputs.platforms }}
          push: ${{ inputs.push == 'true' }}
          tags: ${{ steps.meta_client.outputs.tags }}
          labels: ${{ steps.meta_client.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Meta signal
        id: meta_signal
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO }}-signal
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=ref,event=branch
            type=ref,event=tag
            type=sha

      - name: Build signal
        uses: docker/build-push-action@v6
        with:
          context: .
          file: deploy/Dockerfile.signal
          platforms: ${{ inputs.platforms }}
          push: ${{ inputs.push == 'true' }}
          tags: ${{ steps.meta_signal.outputs.tags }}
          labels: ${{ steps.meta_signal.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Meta app
        id: meta_app
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO }}-app
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=ref,event=branch
            type=ref,event=tag
            type=sha

      - name: Build app
        uses: docker/build-push-action@v6
        with:
          context: .
          file: deploy/Dockerfile.server
          platforms: ${{ inputs.platforms }}
          push: ${{ inputs.push == 'true' }}
          tags: ${{ steps.meta_app.outputs.tags }}
          labels: ${{ steps.meta_app.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
