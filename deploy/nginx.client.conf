worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /tmp/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile        on;
  tcp_nopush      on;
  keepalive_timeout 65;
  server_tokens off;

  # Compression
  gzip on;
  gzip_comp_level 5;
  gzip_min_length 1024;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss image/svg+xml;
  gzip_vary on;

  map $http_upgrade $connection_upgrade { default upgrade; '' close; }

  upstream signal_upstream { server signal:8787; }
  upstream app_upstream    { server app:8080; }

  server {
    listen 8080;
    server_name _;

    root /usr/share/nginx/html;
    index index.html;

    # Healthcheck endpoint
    location = /health {
      add_header Content-Type text/plain;
      return 200 'ok';
    }

    # Security headers (adjust CSP as needed for CDNs)
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Cross-Origin-Opener-Policy "same-origin" always;
    add_header Cross-Origin-Embedder-Policy "require-corp" always;
    add_header Cross-Origin-Resource-Policy "same-origin" always;
    # If served behind TLS-terminating proxy, HSTS will be honored by browsers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Dashboard under /dashboard → app server
    location = /dashboard {
      proxy_pass http://app_upstream/dashboard;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
    }
    location ^~ /dashboard/ {
      proxy_pass http://app_upstream;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
    }

    location / {
      try_files $uri $uri/ /index.html;
    }

    # WebSocket upgrade → signal server
    location /ws {
      proxy_pass http://signal_upstream;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
    }

    # Keep signal REST endpoints under /api for frontend defaults
    location /api/sessions {
      proxy_pass http://signal_upstream/sessions;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
    }
    location /api/health {
      proxy_pass http://signal_upstream/health;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
    }

    # Forward remaining /api/* to app server
    location /api/ {
      proxy_pass http://app_upstream/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
    }
  }
}
