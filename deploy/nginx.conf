worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile        on;
  tcp_nopush      on;
  keepalive_timeout 65;
  server_tokens off;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  upstream signal_upstream {
    server 127.0.0.1:8787;
  }
  upstream app_upstream {
    server 127.0.0.1:8080;
  }

  # HTTP server
  server {
    listen 80;
    server_name _;

    root /usr/share/nginx/html;
    index index.html;

    # Dashboard proxied under /dashboard → app_upstream
    location = /dashboard {
      proxy_pass http://app_upstream/dashboard;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    location ^~ /dashboard/ {
      proxy_pass http://app_upstream;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Serve SPA with fallback to index.html
    location / {
      try_files $uri $uri/ /index.html;
    }

    # REST endpoints to signal server
    location /sessions {
      proxy_pass http://signal_upstream;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /health {
      proxy_pass http://signal_upstream;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
    }

    # WebSocket upgrade to signal server
    location /ws {
      proxy_pass http://signal_upstream;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
    }

    # --- /api prefix forwarded to logs server (HTTP only) ---
    # Normalize /api to /api/
    location = /api {
      return 301 /api/;
    }

    # Keep signal server REST endpoints accessible via /api/sessions and /api/health for frontend defaults
    location /api/sessions {
      proxy_pass http://signal_upstream/sessions;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    location /api/health {
      proxy_pass http://signal_upstream/health;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
    }

    # Disallow WebSocket over /api/ws; use /ws only
    location = /api/ws {
      return 404;
    }

    # Forward remaining /api/* to app server
    location /api/ {
      proxy_pass http://app_upstream/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  }

  # HTTPS server
  server {
    listen 443 ssl;
    server_name _;

    ssl_certificate     /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;

    root /usr/share/nginx/html;
    index index.html;

    # Dashboard proxied under /dashboard → app_upstream
    location = /dashboard {
      proxy_pass http://app_upstream/dashboard;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto https;
    }
    location ^~ /dashboard/ {
      proxy_pass http://app_upstream;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto https;
    }

    location / {
      try_files $uri $uri/ /index.html;
    }

    location /sessions {
      proxy_pass http://signal_upstream;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Proto https;
    }

    location /health {
      proxy_pass http://signal_upstream;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto https;
    }

    location /ws {
      proxy_pass http://signal_upstream;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto https;
    }

    # --- /api prefix forwarded to logs server (HTTPS terminates at proxy) ---
    location = /api {
      return 301 /api/;
    }

    location /api/sessions {
      proxy_pass http://signal_upstream/sessions;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto https;
    }
    location /api/health {
      proxy_pass http://signal_upstream/health;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto https;
    }

    # Disallow WebSocket over /api/ws; use /ws only
    location = /api/ws {
      return 404;
    }

    location /api/ {
      proxy_pass http://app_upstream/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
    }
  }
}
